openapi: 3.0.3
info:
  title: Terra Scientific Pipelines Service
  version: 0.1.0
paths:
  /status:
    get:
      summary: Check status of the service.
      tags: [ public ]
      operationId: getStatus
      security: [ ]
      responses:
        '200':
          description: OK
        '500':
          $ref: '#/components/responses/ServerError'
        '503':
          $ref: '#/components/responses/SystemStatusResponse'
  /version:
    get:
      summary: Get version info of the deployed service.
      tags: [ public ]
      operationId: getVersion
      security: [ ]
      responses:
        '200':
          description: Version information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionProperties'
        '404':
          description: "Version not configured"
        '500':
          $ref: '#/components/responses/ServerError'


  # Specific terra scientific pipelines service queries will go here
  /api/pipelines/v1alpha1/:
      get:
        summary: Return all available Pipelines
        operationId: getPipelines
        tags: [ pipelines ]
        responses:
          '200':
            description: Success
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/TspsPipelinesGetResult'
          '403':
            $ref: '#/components/responses/PermissionDenied'
          '404':
            $ref: '#/components/responses/NotFound'
          '500':
            $ref: '#/components/responses/ServerError'


components:

  parameters:

  responses:
    # Error Responses
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    PermissionDenied:
      description: Permission denied
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    NotFound:
      description: Not found (or unauthorized)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    ServerError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorReport'
    SystemStatusResponse:
      description: A JSON description of the subsystems and their statuses.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SystemStatus'

  schemas:
    # Terra common schemas
    ErrorReport:
      type: object
      required: [ message, statusCode ]
      properties:
        message:
          type: string
        statusCode:
          type: integer

    VersionProperties:
      type: object
      properties:
        gitTag:
          type: string
        gitHash:
          type: string
        github:
          type: string
        build:
          type: string

    SystemStatus:
      required: [ ok, systems ]
      type: object
      properties:
        ok:
          type: boolean
          description: whether any system(s) need attention
        systems:
          type: object
          additionalProperties:
            type: object
            properties:
              ok:
                type: boolean
              messages:
                type: array
                items:
                  type: string

    # Please keep alphabetized
    TspsPipeline:
      description: |
        Object containing the id, display name, and description of a Pipeline.
      type: object
      required: [ pipelineId, displayName, description ]
      properties:
        pipelineId:
          $ref: "#/components/schemas/TspsPipelineId"
        displayName:
          $ref: "#/components/schemas/TspsPipelineDisplayName"
        description:
          $ref: "#/components/schemas/TspsPipelineDescription"

    TspsPipelineDescription:
      description: |
        The description for the Pipeline.
      type: string
      format: string

    TspsPipelineDisplayName:
      description: |
        The display name for the Pipeline.
      type: string
      format: string

    TspsPipelineId:
      description: |
        The identifier string for the Pipeline.
      type: string
      format: string

    TspsPipelinesGetResult:
      type: array
      items:
        $ref: '#/components/schemas/TspsPipeline'
      required: [ pipelineId, displayName, description ]
      properties:
        TspsPipeline:
          $ref: '#/components/schemas/TspsPipeline'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer


security:
  - bearerAuth: [ ]
